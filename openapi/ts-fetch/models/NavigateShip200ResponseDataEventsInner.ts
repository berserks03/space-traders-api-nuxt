/* tslint:disable */
/* eslint-disable */
/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.3.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ShipConditionEvent } from './ShipConditionEvent';
import {
    instanceOfShipConditionEvent,
    ShipConditionEventFromJSON,
    ShipConditionEventFromJSONTyped,
    ShipConditionEventToJSON,
} from './ShipConditionEvent';

/**
 * @type NavigateShip200ResponseDataEventsInner
 * 
 * @export
 */
export type NavigateShip200ResponseDataEventsInner = ShipConditionEvent;

export function NavigateShip200ResponseDataEventsInnerFromJSON(json: any): NavigateShip200ResponseDataEventsInner {
    return NavigateShip200ResponseDataEventsInnerFromJSONTyped(json, false);
}

export function NavigateShip200ResponseDataEventsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): NavigateShip200ResponseDataEventsInner {
    if (json == null) {
        return json;
    }
    if (instanceOfShipConditionEvent(json)) {
        return ShipConditionEventFromJSONTyped(json, true);
    }

    return {} as any;
}

export function NavigateShip200ResponseDataEventsInnerToJSON(json: any): any {
    return NavigateShip200ResponseDataEventsInnerToJSONTyped(json, false);
}

export function NavigateShip200ResponseDataEventsInnerToJSONTyped(value?: NavigateShip200ResponseDataEventsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    if (instanceOfShipConditionEvent(value)) {
        return ShipConditionEventToJSON(value as ShipConditionEvent);
    }

    return {};
}

